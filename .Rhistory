library(ggplot2)
library(MASS)
# Use this code chunk for your answer.
?cats
# Use this code chunk for your answer.
setwd("~/Desktop/data")
goalies = read.csv("goalies.csv")
lm1 = lm(W ~ GAA + SV_PCT + MIN, data = goalies)
summary(lm1)
# Use this code chunk for you answer, as needed.
intercept_model = lm(W ~ 1, data = goalies)
anova(intercept_model, lm1)
# Use this code chunk for your answer.
predict(lm1, data.frame('GAA' = 2.93, 'SV_PCT' = 0.906,
'MIN' = 52476))
# Use this code chunk for your answer.
predict(lm1, data.frame('GAA' = 2.93, 'SV_PCT' = 0.906,
'MIN' = 52476),
interval = 'prediction',
level = 0.9)
# Use this code chunk for your answer.
s_y = sd(goalies$W)
s_y
summary(lm1)
s_e = 16.67
s_e
# Use this code chunk for your answer.
model_2 = lm(data = goalies,
W ~ SA + MIN + SO)
model_3 = lm(data = goalies,
W ~ SA + MIN + SO + SV + GA)
anova(model_2, model_3)
# Use this code chunk for your answer.
model_t_test = lm(data = goalies,
W ~ GA + SA + SV + SV_PCT + GAA + SO + MIN + PIM)
summary(model_t_test)
# Use this code chunk for your answer.
summary(model_t_test)
step1 = lm(data = goalies,
W ~ GA + SA + SV + SO + MIN + PIM + SV_PCT)
summary(step1)
step2 = lm(data = goalies,
W ~ GA + SA + SV + SO + MIN + PIM)
summary(step2)
step3 = lm(data = goalies,
W ~ GA + SA + SV + MIN + PIM)
summary(step3)
# Use this code chunk for your answer, as needed.
setwd("~/Desktop/data")
cfa = read.csv("chickfila.csv")
2^10
# Use this code chunk for your answer.
start_model = lm(Calories ~ Fat + SatFat + TransFat + Cholesterol +
Sodium + Carbs + Fiber + Sugar + Protein + Serving,
data = cfa)
step(data = cfa,
object = start_model ,
direction = 'backward', k = log(290))
# Use this code chunk for your answer.
step(data = cfa,
object = lm(Calories ~ 1, data = cfa),
scope = Calories ~ Fat  + SatFat + TransFat + Cholesterol +
Sodium + Carbs + Fiber + Sugar + Protein + Serving,
direction = 'forward',
k = log(290))
# Use this code chunk for your answer.
step(data = cfa,
object = lm(Calories ~ 1, data = cfa),
scope = Calories ~ Fat  + SatFat + TransFat + Cholesterol +
Sodium + Carbs + Fiber + Sugar + Protein + Serving,
direction = 'both',
k = log(290))
# Use this code chunk for your ansswer.
library(leaps)
all_calories_model = summary(regsubsets(Calories ~ Fat + SatFat + TransFat + Cholesterol + Sodium
+ Carbs + Fiber + Sugar + Protein + Serving, data = cfa))
all_calories_model
# Use this code chunk for your answer.
extractAIC(data = cfa,
lm(Calories ~ Fat + Carbs + Protein))
# Use this code chunk for your answer.
extractAIC(lm(Calories ~ Fat + Carbs + Protein, data = cfa))
extractAIC(all_calories_model)
all_calories_model$bic
# Use this code chunk for your answer.
extractAIC(lm(Calories ~ Fat + Carbs + Protein, data = cfa))
290 * log(all_calories_model$bic)
290 * ln(all_calories_model$bic)
all_calories_model$cp
which.min(all_calories_model$bic)
all_calories_model$cip
all_calories_model$bic
extractAIC(lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving))
which.min(all_calories_model$bic)
190 * log(extractAIC(lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)))
# Use this code chunk for your answer.
extractAIC(lm(Calories ~ Fat + Carbs + Protein, data = cfa))
all_calories_model$bic
which.min(all_calories_model$bic)
190 * log(extractAIC(lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)))
190 * log((lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)$rss))
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
290 * log(model7$rss)
290 * log(model7$rss)
model7$rss
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model7$rss
all_calories_model$rss
190 * log(all_calories_model$rss)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
extractAIC(model7)
190 * log(all_calories_model$rss)
which.min(all_calories_model$bic)
model5, model6, model7, model8)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Cabrs + Protein)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories + Fat + Carbs + sugar + Protein)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories + Fat + Carbs + Sugar + Protein)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
extractAIC(c(model1, model2, model3, model4,
model5, model6, model7, model8)
190 * log(all_calories_model$rss)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
extractAIC(c(model1, model2, model3, model4,
model5, model6, model7, model8))
model_list = as.list((c(model1, model2, model3, model4,
model5, model6, model7, model8)
extractAIC))
model_list = as.list(c(model1, model2, model3, model4,
model5, model6, model7, model8))
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
model_list = as.list(c(model1, model2, model3, model4,
model5, model6, model7, model8))
for(i in model_list) {
print(extractAIC(i))
}
extractAIC(model1)
model_list = c(model1, model2, model3, model4,
model5, model6, model7, model8)
for(i in model_list) {
print(extractAIC(i))
}
model_list[1]
print(extractAIC(model_list[i]))
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
290 * log(all_calories_model$rss)
extractAIC(model1)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
290 * ln(all_calories_model$rss)
290 * log(all_calories_model$rss)
extractAIC(model1)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
290 * log(all_calories_model$rss)
extractAIC(model1)
# Use this code chunk for your answer.
model1 = lm(data = cfa,
Calories ~ Fat)
model2 = lm(data = cfa,
Calories ~ Fat + Carbs)
model3 = lm(data = cfa,
Calories ~ Fat + Carbs + Protein)
model4 = lm(data = cfa,
Calories ~ Fat + Carbs + Sugar + Protein)
model5 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein)
model6 = lm(data = cfa,
Calories ~ Fat + SatFat + Carbs + Fiber + Protein + Serving)
model7 = lm(data = cfa, Calories ~ Fat + SatFat  +
Sodium + Carbs + Fiber + Protein + Serving)
model8 = lm(data = cfa,
Calories ~ Fat + SatFat + Sodium + Carbs + Fiber + Sugar + Protein + Serving)
extractAIC(model1)
extractAIC(model2)
extractAIC(model3)
extractAIC(model4)
extractAIC(model5)
extractAIC(model6)
extractAIC(model7)
extractAIC(model8)
order(c(extractAIC(model1), extractAIC(model2), extractAIC(model3)))
extractAIC(model1)
extractAIC(model2)
extractAIC(model3)
extractAIC(model4)
extractAIC(model5)
extractAIC(model6)
extractAIC(model7)
extractAIC(model8)
extractAIC(model8)
190 * log(all_calories_model$rss)
# Use this code chunk for your answer.
extractAIC(model1, k = log(290))
extractAIC(model2, k = log(290))
extractAIC(model3, k = log(290))
extractAIC(model4, k = log(290))
extractAIC(model5, k = log(290))
extractAIC(model6, k = log(290))
extractAIC(model7, k = log(290))
extractAIC(model8, k = log(290))
#Use this code chunk for your answer.
all_calories_model$r^2
#Use this code chunk for your answer.
all_calories_model$rsq
#Use this code chunk for your answer.
all_calories_model$rsq
summary(model1)
#Use this code chunk for your answer.
all_calories_model$rsq
summary(model1)
summary(model2)
#Use this code chunk for your answer.
all_calories_model$rsq
summary(model1)
summary(model2)
summary(model8)
#Use this code chunk for your answer.
all_calories_model$rsq
#Use this code chunk for your answer.
all_calories_model$adjr2
# Use this code chunk for your answer.
sqrt((1/290) * sum((all_calories_model$rss)^2))
# Use this code chunk for your answer.
sqrt((1/290) * all_calories_model$rss)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
library(fixest)
df = fread("~/Desktop/data econ 474/usa_00003.csv")
names(df) = names(df) %>% tolower
dim(df)
df = df %>%
filter(sex == 1,
race %in% c(1,2),
birthyr %in% 1930:1959,
!bpl %in% c(011,090:999),
gq == 1,
wkswork1 >= 01,
educ != 00,
!is.na(incwage),
!incwage %in% c(999998, 999999),
incwage > 0) %>%
mutate(wkly_wage = incwage/wkswork1,
black = ifelse(race == 2, 1, 0),
married = ifelse(marst %in% c(1,2), 1, 0),
cental_msa = ifelse(metro == 2, 1, 0),
birthdate = birthyr + (birthqtr - 1)/4,
age_qtr = case_when(birthqtr == 1 ~ paste(age),
birthqtr == 2 ~ paste(age + .25),
birthqtr == 3 ~ paste(age + .5),
birthqtr == 4 ~ paste(age + .75)),
yos = case_when(educd == 2 ~ 0, educd == 14 ~ 1, educd == 15 ~ 2,
educd == 16 ~ 3, educd == 17 ~ 4, educd == 22 ~ 5,
educd == 23 ~ 6, educd == 25 ~ 7, educd == 26 ~ 8,
educd == 30 ~ 9, educd == 40 ~ 10, educd == 50 ~ 11,
educd == 60 ~ 12, educd == 70 ~ 13, educd == 80 ~ 14,
educd == 90 ~ 15, educd == 100 ~ 16, educd == 110 ~ 17,
educd == 111 ~ 18, educd == 112 ~ 19, educd == 113 ~ 20))
dim(df)
